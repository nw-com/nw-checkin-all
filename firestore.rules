rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 角色判斷輔助函式
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin','administrator','管理員'];
    }
    // 社區維護角色：允許管理員、人事、主管、初階主管、社區管理員
    function isCommunityEditor() {
      return (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin','administrator','管理員','hr','manager','junior_manager','community_admin','社區管理員']
      );
    }
    // 補打申請審核角色：管理員、人事、高階主管
    function isReviewer() {
      return (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'hr' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager'
      );
    }
    // 全域預設：允許所有已登入用戶讀取，但不允許任意寫入
    // 具體集合的寫入權限在下方細則中分別定義
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    
    // 為了讓儀表板能顯示所有員工的狀態，允許所有登入的使用者讀取所有人的基本資料。
    // 使用者仍然只能更新自己的個人資料，但管理員可以更新所有用戶資料。
    match /users/{userId} {
      allow read: if request.auth != null;
      // 管理員可更新任意欄位；一般使用者僅能更新安全欄位
      allow update: if isAdmin() || (
        request.auth.uid == userId &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'name',
          'avatarUrl',
          'clockInStatus',
          'outboundLocation',
          'dutyType',
          'leaveReason',
          'leaveStatus',
          'status',
          'lastUpdated',
          'firstClockInDeviceId'
        ])
      );
      // 只有管理員可以建立或刪除使用者文件
      allow create, delete: if isAdmin();
    }
    
    // 允許所有登入的使用者讀取所有人的打卡紀錄。
    // 注意：Firestore 的讀取權限是針對整個文件，無法只開放部分欄位。
    // 使用者仍然只能為自己建立打卡紀錄。
    match /clockInRecords/{recordId} {
      // 本人可建立；管理員可代建。並限制欄位與型別以提高安全性
      allow create: if (
        request.auth.uid == request.resource.data.userId || isReviewer()
      ) &&
      request.resource.data.keys().hasOnly([
        'userId','type','timestamp','location','photoUrls','descriptions','deviceId','locationName','dutyType','isAutomatic'
      ]) &&
      request.resource.data.type in ['上班','下班','外出','返回','抵達','離開','自動下班'] &&
      request.resource.data.timestamp is timestamp &&
      request.resource.data.location is latlng &&
      request.resource.data.photoUrls is list &&
      request.resource.data.descriptions is list &&
      (request.resource.data.isAutomatic == null || request.resource.data.isAutomatic is bool) &&
      request.resource.data.photoUrls.size() <= 3 &&
      request.resource.data.descriptions.size() == request.resource.data.photoUrls.size();

      allow read: if request.auth != null;
      // 僅管理員可更新或刪除打卡紀錄，並限制可更新欄位與型別
      allow update: if isAdmin() &&
        request.resource.data.keys().hasOnly([
          'userId','type','timestamp','location','photoUrls','descriptions','deviceId','locationName','dutyType','isAutomatic'
        ]) &&
        request.resource.data.type in ['上班','下班','外出','返回','抵達','離開','自動下班'] &&
        request.resource.data.timestamp is timestamp &&
        (request.resource.data.location == null || request.resource.data.location is latlng) &&
        (request.resource.data.photoUrls == null || request.resource.data.photoUrls is list) &&
        (request.resource.data.descriptions == null || request.resource.data.descriptions is list) &&
        (request.resource.data.isAutomatic == null || request.resource.data.isAutomatic is bool) &&
        (request.resource.data.photoUrls == null || request.resource.data.photoUrls.size() <= 3) &&
        (request.resource.data.descriptions == null || request.resource.data.descriptions.size() == (request.resource.data.photoUrls == null ? resource.data.photoUrls.size() : request.resource.data.photoUrls.size()));

      allow delete: if isAdmin();
    }
    
    // 只有管理員可以讀寫計點規則
    match /pointRules/{ruleId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 大頭照存放於 Firestore：限制欄位與型別
    match /userAvatars/{userId} {
      allow read: if request.auth != null;
      allow create, update: if (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      ) &&
      request.resource.data.keys().hasOnly(['data','mimeType','updatedAt']) &&
      request.resource.data.data is string &&
      request.resource.data.mimeType in ['image/jpeg','image/png','image/webp'] &&
      (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
      // 禁止刪除以保留歷史（如需可改為同上角色允許）
      allow delete: if false;
    }
    
    // 允許用戶提交請假申請，並允許管理員審核
    match /leaves/{leaveId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      // 使用者可取消自己待審核的請假（僅 pending -> canceled）
      allow update: if (
        // 管理員可更新任意請假申請
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      ) || (
        // 本人可將自己提交且為 pending 的假單取消（更新為 canceled）
        request.auth != null && request.resource.data.userId == request.auth.uid && resource.data.status == 'pending' && request.resource.data.status == 'canceled'
      );
      // 只有管理員可刪除
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // 社區資料（讀）
    match /communities/{communityId} {
      allow read: if request.auth != null;
    }

    // 社區根集合：哨點清單
    match /posts/{postId} {
      allow read: if request.auth != null;
      // 建立時需要完整欄位
      allow create: if isCommunityEditor() &&
        request.resource.data.keys().hasOnly([
          'communityId','name','createdAt','updatedAt'
        ]) &&
        request.resource.data.communityId is string &&
        request.resource.data.name is string &&
        request.resource.data.createdAt is timestamp &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
      // 更新時允許只改名稱與更新時間
      allow update: if isCommunityEditor() &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['name','updatedAt']) &&
        request.resource.data.name is string &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
      // 刪除操作不應檢查 request.resource.data（delete 時為 null）
      allow delete: if isCommunityEditor();
    }

    // 哨點每日班表與規則
    match /postSchedules/{docId} {
      allow read: if request.auth != null;
      // 建立：嚴格檢查所有欄位與型別
      allow create: if isCommunityEditor() &&
        request.resource.data.keys().hasOnly([
          'communityId','postId','dateIso','dateTS','isScheduledDay','overlapAllowed','requireFullDay','shifts','createdAt','updatedAt','updatedBy'
        ]) &&
        request.resource.data.communityId is string &&
        request.resource.data.postId is string &&
        request.resource.data.dateIso is string &&
        (request.resource.data.dateTS == null || request.resource.data.dateTS is timestamp) &&
        (request.resource.data.isScheduledDay == null || request.resource.data.isScheduledDay is bool) &&
        (request.resource.data.overlapAllowed == null || request.resource.data.overlapAllowed is bool) &&
        (request.resource.data.requireFullDay == null || request.resource.data.requireFullDay is bool) &&
        (request.resource.data.shifts == null || request.resource.data.shifts is list) &&
        (request.resource.data.createdAt == null || request.resource.data.createdAt is timestamp) &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp) &&
        (request.resource.data.updatedBy == null || request.resource.data.updatedBy is string);
      // 更新：只限制變更的欄位名稱與型別
      allow update: if isCommunityEditor() &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'communityId','postId','dateIso','dateTS','isScheduledDay','overlapAllowed','requireFullDay','shifts','createdAt','updatedAt','updatedBy'
        ]) &&
        (request.resource.data.communityId == null || request.resource.data.communityId is string) &&
        (request.resource.data.postId == null || request.resource.data.postId is string) &&
        (request.resource.data.dateIso == null || request.resource.data.dateIso is string) &&
        (request.resource.data.dateTS == null || request.resource.data.dateTS is timestamp) &&
        (request.resource.data.isScheduledDay == null || request.resource.data.isScheduledDay is bool) &&
        (request.resource.data.overlapAllowed == null || request.resource.data.overlapAllowed is bool) &&
        (request.resource.data.requireFullDay == null || request.resource.data.requireFullDay is bool) &&
        (request.resource.data.shifts == null || request.resource.data.shifts is list) &&
        (request.resource.data.createdAt == null || request.resource.data.createdAt is timestamp) &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp) &&
        (request.resource.data.updatedBy == null || request.resource.data.updatedBy is string);
      // 刪除時 request.resource 為 null，因此僅需角色檢查
      allow delete: if isCommunityEditor();
    }

    // 社區巢狀子集合：哨點
    match /communities/{communityId}/posts/{postId} {
      allow read: if request.auth != null;
      // 建立時需要完整欄位，且 communityId 必須匹配路徑
      allow create: if isCommunityEditor() &&
        request.resource.data.keys().hasOnly([
          'communityId','name','createdAt','updatedAt'
        ]) &&
        request.resource.data.communityId is string &&
        request.resource.data.communityId == communityId &&
        request.resource.data.name is string &&
        request.resource.data.createdAt is timestamp &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
      // 更新時允許只改名稱與更新時間
      allow update: if isCommunityEditor() &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['name','updatedAt']) &&
        request.resource.data.name is string &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
      // 刪除時 request.resource 為 null，因此僅需角色檢查
      allow delete: if isAdmin();
    }

    // 哨點子集合：模板（目前僅需允許刪除以清理舊資料）
    match /communities/{communityId}/posts/{postId}/templates/{templateId} {
      allow read: if request.auth != null;
      allow delete: if isCommunityEditor();
    }

    // 社區巢狀子集合：每日班表與規則
    match /communities/{communityId}/postSchedules/{docId} {
      allow read: if request.auth != null;
      // 建立：嚴格檢查所有欄位與型別
      allow create: if isCommunityEditor() &&
        request.resource.data.keys().hasOnly([
          'communityId','postId','dateIso','dateTS','isScheduledDay','overlapAllowed','requireFullDay','shifts','createdAt','updatedAt','updatedBy'
        ]) &&
        request.resource.data.communityId is string &&
        request.resource.data.communityId == communityId &&
        request.resource.data.postId is string &&
        request.resource.data.dateIso is string &&
        (request.resource.data.dateTS == null || request.resource.data.dateTS is timestamp) &&
        (request.resource.data.isScheduledDay == null || request.resource.data.isScheduledDay is bool) &&
        (request.resource.data.overlapAllowed == null || request.resource.data.overlapAllowed is bool) &&
        (request.resource.data.requireFullDay == null || request.resource.data.requireFullDay is bool) &&
        (request.resource.data.shifts == null || request.resource.data.shifts is list) &&
        (request.resource.data.createdAt == null || request.resource.data.createdAt is timestamp) &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp) &&
        (request.resource.data.updatedBy == null || request.resource.data.updatedBy is string);
      // 更新：只限制變更的欄位名稱與型別（避免舊資料欄位造成阻擋）
      allow update: if isCommunityEditor() &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'communityId','postId','dateIso','dateTS','isScheduledDay','overlapAllowed','requireFullDay','shifts','createdAt','updatedAt','updatedBy'
        ]) &&
        (request.resource.data.communityId == null || request.resource.data.communityId is string) &&
        (request.resource.data.postId == null || request.resource.data.postId is string) &&
        (request.resource.data.dateIso == null || request.resource.data.dateIso is string) &&
        (request.resource.data.dateTS == null || request.resource.data.dateTS is timestamp) &&
        (request.resource.data.isScheduledDay == null || request.resource.data.isScheduledDay is bool) &&
        (request.resource.data.overlapAllowed == null || request.resource.data.overlapAllowed is bool) &&
        (request.resource.data.requireFullDay == null || request.resource.data.requireFullDay is bool) &&
        (request.resource.data.shifts == null || request.resource.data.shifts is list) &&
        (request.resource.data.createdAt == null || request.resource.data.createdAt is timestamp) &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp) &&
        (request.resource.data.updatedBy == null || request.resource.data.updatedBy is string);
      // 刪除時 request.resource 為 null，因此僅需角色檢查
      allow delete: if isCommunityEditor();
    }
  }
}